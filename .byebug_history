continue
n
user_with_no_participants.participants.destroy_all
continue
n
@other_user_task.archived
continue
n
continue
participant.actions.last_five_days.reverse.map { |action| action.created_at.to_date }.uniq.count
participant.actions.last_five_days.reverse.map { |action| action.created_at.to_date }.uniq
participant.actions.last_five_days
Time.now.to_date
current_day
participant.actions
participant.streak
participant
continue
action
continue
n
continue
n
streak_count
n
days_with_action
n
self
continue
self.user.streak_boni_enabled
current_user.streak_boni_enabled
current_user..streak_boni_enabled
self.streak_boni_enabled
streak_boni_enabled
streak_boni_enabled?
self
streak
continue
streak
continue
@user.actions
action
 @user.streak_boni_days_threshold
@participant.streak
continue
result
continue
n
continue
n
current_user.email
current_user.name
current_user
params
n
continue
r
n
continue
n
continue
n
continue
n
continue
action
n
continue
 self.bonus_points
task.calculate_bonus_points
task.cal
   19:   def broadcast_total_points(action_type)
(byebug) user.overdue_bonus_enabled?
user.overdue_bonus_enabled?
continue
user.overdue_bonus_enabled?
continue
n
continue
sad
cu
self.user.streak_boni_days_trashhold 
streak
continue
streak
continue
streak
continue
 task.overdue.abs
(overdue_on.to_date - today.to_date).to_i
(overdue_on.to_date - today.to_date)
overdue_on
actions.last.created_at.to_date + self.interval
self.interval
self
task
today
continue
current_user
enabled
continue
enabled
n
continue
cumulative_data
n
select_cumulative_sql
cumulative_data
continue
participant_name
@data
task_title
